# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: 'CMake'

on:
  push:
    branches:
      - main
      - changeYml
      - feature/github_actions
 # pull_request:
  #  branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest   

    steps:
    - uses: actions/checkout@v1
    #with
    #  submodules: true
    - name: Configure Libs
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: sudo apt-get update && sudo apt-get install libboost-test-dev -y    
    
    - name: Build
      # Build your program with the given configuration
      run: cmake --build . 
           && cmake --build . --target test
           && cmake --build . --target package

    - name: Make release
      id: make_release
      uses: actions/make_release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release 
      id: upload-release
      uses: actions/upload-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.make_release.outputs.upload_url }}
        asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package