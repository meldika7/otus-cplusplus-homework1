# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest   

    steps:
    - uses: actions/checkout@v4
      with:
          submodules: true
    - run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
    - run: cmake . -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON
    - run: cmake --build .
    - run: cmake --build . --target test
    - run: cmake --build . --target package
      
    #- name: Test
    #  working-directory: ${{ steps.strings.outputs.build-output-dir }}
      # Execute tests defined by the CMake configuration. Note that --build-config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest --build-config ${{ matrix.build_type }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/vnd.debian.binary-package
